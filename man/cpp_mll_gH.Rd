% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_mll_gH}
\alias{cpp_mll_gH}
\title{Calculate Gradient and Hessian for SIR models (NLL)}
\usage{
cpp_mll_gH(tab, Y, W, X, Z_list, family)
}
\arguments{
\item{tab}{Parameter vector (theta, alpha[-1], beta).}

\item{Y}{(m x m x T) array of outcomes.}

\item{W}{(m x m x p) array of influence covariates.}

\item{X}{(m x m x T) array for the bilinear part.}

\item{Z_list}{List of q (m x m x T) arrays for exogenous covariates (passed this way for 4D handling).}

\item{family}{Distribution family ("poisson", "normal", "binomial").}
}
\value{
A list containing the gradient (grad), Hessian (hess), and score cross-product (shess) of the NLL.
}
\description{
Computes the gradient, Hessian, and score cross-product for the Negative Log-Likelihood (NLL)
of the SIR model. This implementation is optimized by avoiding explicit calculation of Xij
inside the loops, relying instead on the (A, B) structure.
}
