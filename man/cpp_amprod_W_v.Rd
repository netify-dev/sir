% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_amprod_W_v}
\alias{cpp_amprod_W_v}
\title{Array-Matrix Product for Influence Matrices}
\usage{
cpp_amprod_W_v(W, v)
}
\arguments{
\item{W}{Three-dimensional array (m x m x p) of influence covariates.
Each slice W[,,k] represents one way nodes can influence each other
(e.g., geographic proximity, social distance, shared attributes).}

\item{v}{Vector (p x 1) of coefficients for the linear combination.
These are the parameters being estimated (either alpha or beta).}
}
\value{
Matrix (m x m) representing the weighted combination of influence
  covariate matrices. This becomes either the A or B matrix in the model.
}
\description{
Computes a weighted sum of influence covariate matrices to construct the
parameterized influence matrices A or B in the SIR model.
}
\details{
This function implements the parameterization:
Result = sum(k=1 to p) v[k] * W[,,k]

In the SIR model context:
- A = alpha[1] * I + sum(k=2 to p) alpha[k] * W[,,k-1]
- B = sum(k=1 to p) beta[k] * W[,,k]

The parameterization reduces the number of free parameters from O(mÂ²) to O(p),
where typically p << m. This makes estimation feasible for larger networks.

Computational strategy:
- Skips zero coefficients to save computation
- Uses in-place addition to minimize memory allocation
- Leverages Armadillo's expression templates for efficiency
}
\note{
The function checks for dimension compatibility and will throw an
  error if v has incorrect length. Zero coefficients are detected and
  skipped to improve performance when the model is sparse.
}
\examples{
\dontrun{
// In R:
m <- 10; p <- 3
W <- array(rnorm(m*m*p), dim=c(m,m,p))
v <- c(1, 0.5, -0.3)  // Coefficients
A <- cpp_amprod_W_v(W, v)
// A is now the parameterized influence matrix
}

}
